<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="4" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="39311" started-at="2021-06-06T20:40:09 EDT" finished-at="2021-06-06T20:40:48 EDT">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="39311" started-at="2021-06-06T20:40:09 EDT" finished-at="2021-06-06T20:40:48 EDT">
      <class name="com.ffm.runner.TestRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="setUpClass" is-config="true" duration-ms="849" started-at="2021-06-06T20:40:09 EDT" finished-at="2021-06-06T20:40:10 EDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="runScenario" duration-ms="10316" started-at="2021-06-06T20:40:10 EDT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-06T20:40:20 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA["As an FFM OT member, I want to login to FFM platform"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[FFM OT Member Login Panel]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="runScenario" duration-ms="8828" started-at="2021-06-06T20:40:20 EDT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-06T20:40:29 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA["As an FFM OT member, I want to login to FFM platform"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[FFM OT Member Login Panel]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="runScenario" duration-ms="8795" started-at="2021-06-06T20:40:29 EDT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-06T20:40:38 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA["As an FFM OT member, I want to login to FFM platform"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[FFM OT Member Login Panel]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="runScenario" duration-ms="8992" started-at="2021-06-06T20:40:38 EDT" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-06-06T20:40:47 EDT">
          <params>
            <param index="0">
              <value>
                <![CDATA["As an FFM OT member, I want to login to FFM platform"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[FFM OT Member Login Panel]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="tearDownClass()[pri:0, instance:com.ffm.runner.TestRunner@3e57cd70]" name="tearDownClass" is-config="true" duration-ms="1484" started-at="2021-06-06T20:40:47 EDT" finished-at="2021-06-06T20:40:48 EDT">
          <exception class="java.lang.NoSuchFieldError">
            <message>
              <![CDATA[Justify]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NoSuchFieldError: Justify
at org.vandeseer.easytable.drawing.cell.ParagraphCellDrawer.<clinit>(ParagraphCellDrawer.java:27)
at org.vandeseer.easytable.structure.cell.paragraph.ParagraphCell.createDefaultDrawer(ParagraphCell.java:42)
at org.vandeseer.easytable.structure.cell.AbstractCell.getDrawer(AbstractCell.java:158)
at org.vandeseer.easytable.TableDrawer.drawRow(TableDrawer.java:171)
at org.vandeseer.easytable.TableDrawer.drawWithFunction(TableDrawer.java:153)
at org.vandeseer.easytable.TableDrawer.lambda$drawPage$1(TableDrawer.java:83)
at java.lang.Iterable.forEach(Iterable.java:75)
at org.vandeseer.easytable.TableDrawer.drawPage(TableDrawer.java:82)
at org.vandeseer.easytable.TableDrawer.draw(TableDrawer.java:78)
at tech.grasshopper.pdf.chapter.detailed.DetailedRowComponent.display(DetailedRowComponent.java:90)
at tech.grasshopper.pdf.chapter.detailed.DetailedPage.lambda$0(DetailedPage.java:42)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at tech.grasshopper.pdf.chapter.detailed.DetailedPage.createPage(DetailedPage.java:39)
at tech.grasshopper.pdf.chapter.detailed.DetailedChapter.sendToPage(DetailedChapter.java:115)
at tech.grasshopper.pdf.chapter.detailed.DetailedChapter.createAndSendPageData(DetailedChapter.java:83)
at tech.grasshopper.pdf.chapter.detailed.DetailedChapter.createChapter(DetailedChapter.java:28)
at tech.grasshopper.pdf.PDFCucumberReport.lambda$0(PDFCucumberReport.java:100)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at tech.grasshopper.pdf.PDFCucumberReport.createReport(PDFCucumberReport.java:100)
at tech.grasshopper.pdf.extent.ExtentPDFCucumberReporter.flush(ExtentPDFCucumberReporter.java:66)
at tech.grasshopper.pdf.extent.ExtentPDFCucumberReporter.access$1(ExtentPDFCucumberReporter.java:57)
at tech.grasshopper.pdf.extent.ExtentPDFCucumberReporter$1.onNext(ExtentPDFCucumberReporter.java:42)
at tech.grasshopper.pdf.extent.ExtentPDFCucumberReporter$1.onNext(ExtentPDFCucumberReporter.java:1)
at io.reactivex.rxjava3.subjects.PublishSubject$PublishDisposable.onNext(PublishSubject.java:310)
at io.reactivex.rxjava3.subjects.PublishSubject.onNext(PublishSubject.java:226)
at com.aventstack.extentreports.ReactiveSubject.onFlush(ReactiveSubject.java:83)
at com.aventstack.extentreports.AbstractProcessor.onFlush(AbstractProcessor.java:85)
at com.aventstack.extentreports.ExtentReports.flush(ExtentReports.java:284)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.finishReport(ExtentCucumberAdapter.java:296)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter.access$6(ExtentCucumberAdapter.java:295)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$8.receive(ExtentCucumberAdapter.java:132)
at com.aventstack.extentreports.cucumber.adapter.ExtentCucumberAdapter$8.receive(ExtentCucumberAdapter.java:1)
at io.cucumber.core.eventbus.AbstractEventPublisher.send(AbstractEventPublisher.java:51)
at io.cucumber.core.eventbus.AbstractEventBus.send(AbstractEventBus.java:12)
at io.cucumber.core.runtime.CucumberExecutionContext.emitTestRunFinished(CucumberExecutionContext.java:93)
at io.cucumber.core.runtime.CucumberExecutionContext.finishTestRun(CucumberExecutionContext.java:74)
at io.cucumber.testng.TestNGCucumberRunner.finish(TestNGCucumberRunner.java:126)
at io.cucumber.testng.AbstractTestNGCucumberTests.tearDownClass(AbstractTestNGCucumberTests.java:53)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:217)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:130)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NoSuchFieldError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- com.ffm.runner.TestRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
